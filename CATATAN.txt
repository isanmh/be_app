# install Nodemon biar bisa auto reload:
npm i -g nodemon

buat script di package.json:
 "scripts": {
    "start": "node app.js",
    "dev": "nodemon app.js"
  },

# cara jalanin :
npm start
npm run dev

# Logging & Environment Variable:
pnpm i dotenv morgan 

install gitignore :
npm i -g gitignore
gitignore node

latihan :
silahkan buat enpoint http//:localhost/about
{
  name: "Rizqi",
  job: "developer"
}

# api kita butuh :
pnpm i body-parser cors helmet compression

# cara membuat migration sequelize :
npm i --save-dev sequelize-cli

# untuk membuat file migration config, migration, models, seeders :
npx sequelize-cli init (global)
npm run sequelize-cli init  (local)

# custom path migration, models, seeders :
buat .sequelizerc
copy isi dari .sequelizerc di documentasi sequelize
edit file .sequelizerc, models/index.js, config/database.js : 
  databse.json > databse.js
setting Environment Variable di .env, database.js :

# buat model database migration menggunakan sequelize-cli :
-- global (npx)
npx sequelize-cli model:generate --name User --attributes firstName:string,lastName:string,email:string

npx sequelize-cli model:generate --name Contact --attributes name:string,email:string,phone:string,image:string --underscored

-- local (npm)
npm run sequelize-cli -- model:generate --name Contact --attributes name:string,email:string,phone:string,image:string --underscored

# migration pada sequelize :
-- global (npx)
npx sequelize-cli db:migrate

-- local (npm)
npm run sequelize-cli -- db:migrate
npm run sequelize-cli -- db:migrate:undo
npm run sequelize-cli -- db:migrate:undo:all

# 
pnpm i express-validator multer

# upload file :
hrs buat folder 
public/images

buat middleware :
middleware/uploadMiddleware.js
router.post(
  "/",
  upload.single("image"),
  contactValidator,
  contactsController.store
);


alur route > controller > model > response
app.js > routes > controller > model > response
alur route > controller > model > views

# tugas :
buat endpoint http://localhost:3000/api/contacts/1
{
    "status": "Success",
    "data": [
        {
            "id": 4,
            "name": "fsdfsdf",
            "email": "admin@gmail.com",
            "phone": "08223312121",
            "image": "1741940948232-undraw_vibe-coding_mjme.png",
            "createdAt": "2025-03-14T08:29:08.235Z",
            "updatedAt": "2025-03-14T08:29:08.235Z"
        },    
    ]
}
http://localhost:3000/api/contacts/99 (404)
{
    "message": "Company not found"
}

logic :
- cek file dari form image ada atau tidak(middleware)
- hash nama file image
- cek file image dari database ada atau tidak
- jika ada hapus file image dari folder public/images
- simpan file image ke folder public/images
- update 
  contact.save()


Static file :

if tenary 

isi ? true : false

isi && true
